// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pruebas en <CityOption /> <CityOption /> deberia renderizar el pais en props 1`] = `
<Fragment>
  <h3
    className="titleCity"
    onClick={[Function]}
  >
    , 
  </h3>
  <h3
    className="titleCountry"
    onClick={[Function]}
  >
    Argentina
  </h3>
</Fragment>
`;

exports[`Pruebas en <CityOption /> <CityOption /> deberia renderizar la ciudad en props 1`] = `
<Fragment>
  <h3
    className="titleCity"
    onClick={[Function]}
  >
    Buenos Aires
    , 
  </h3>
  <h3
    className="titleCountry"
    onClick={[Function]}
  />
</Fragment>
`;

exports[`Pruebas en <CityOption /> Deberia mostrar <CityOption/> correctamente 1`] = `
<Fragment>
  <h3
    className="titleCity"
    onClick={[Function]}
  >
    , 
  </h3>
  <h3
    className="titleCountry"
    onClick={[Function]}
  />
</Fragment>
`;

exports[`Pruebas en <SearchBlock/> Deberia mostrar <SearchBlock/> correctamente 1`] = `
<div
  className="container delimiter"
>
  <div
    className="subContainer delimiterChild"
  >
    <h1>
      Buscá ofertas en hoteles, casas y mucho más
    </h1>
    <SearchForm />
  </div>
</div>
`;

exports[`Pruebas en <SearchForm/> Deberia mostrar <SearchForm/> correctamente 1`] = `
<form
  action=""
  className="gridContainer"
>
  <div
    className="iconSelectBox grid-item"
  >
    <SelectCity />
  </div>
  <div
    className="iconSelectBox grid-item"
  >
    <SelectDate />
  </div>
  <button
    className="buttonSearch limitation"
    onClick={[Function]}
  >
    Buscar
  </button>
</form>
`;

exports[`Pruebas en <SelectCity /> <SelectCity /> se renderiza bien 1`] = `
<ForwardRef
  getOptionValue={[Function]}
  isClearable={true}
  isSearchable={true}
  options={Array []}
  placeholder="¿A dónde vamos?"
  styles={
    Object {
      "container": [Function],
      "control": [Function],
      "indicatorsContainer": [Function],
      "option": [Function],
      "placeholder": [Function],
      "singleValue": [Function],
      "valueContainer": [Function],
    }
  }
/>
`;

exports[`Pruebas en <SelectCity /> Deberia mostrar <SelectCity/> correctamente 1`] = `
<div
  className=" css-b1kvmg-SelectContainer"
  onKeyDown={[Function]}
>
  Array [
    <span
      className="css-1f43avz-a11yText-A11yText"
      id="react-select-3-live-region"
    />,
    <span
      aria-atomic="false"
      aria-live="polite"
      aria-relevant="additions text"
      className="css-1f43avz-a11yText-A11yText"
    />,
  ]
  <div
    className=" css-1694klg-control"
    onMouseDown={[Function]}
    onTouchEnd={[Function]}
  >
    <div
      className=" css-1j3ihzp-ValueContainer"
    >
      <div
        className=" css-16a9q3m-Placeholder"
        id="react-select-3-placeholder"
      >
        ¿A dónde vamos?
      </div>
      <div
        className=" css-14dclt2-Input"
        data-value=""
      >
        <input
          aria-autocomplete="list"
          aria-controls="react-select-3-listbox"
          aria-describedby="react-select-3-placeholder"
          aria-expanded={false}
          aria-haspopup={true}
          aria-owns="react-select-3-listbox"
          autoCapitalize="none"
          autoComplete="off"
          autoCorrect="off"
          className=""
          disabled={false}
          id="react-select-3-input"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          role="combobox"
          spellCheck="false"
          style={
            Object {
              "background": 0,
              "border": 0,
              "color": "inherit",
              "font": "inherit",
              "gridArea": "1 / 2",
              "label": "input",
              "margin": 0,
              "minWidth": "2px",
              "opacity": 1,
              "outline": 0,
              "padding": 0,
              "width": "100%",
            }
          }
          tabIndex={0}
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className=" css-e23gzz-IndicatorsContainer"
    >
      <span
        className=" css-1okebmr-indicatorSeparator"
      />
      <div
        aria-hidden="true"
        className=" css-tlfecz-indicatorContainer"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <svg
          aria-hidden="true"
          className="css-tj5bde-Svg"
          focusable="false"
          height={20}
          viewBox="0 0 20 20"
          width={20}
        >
          <path
            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`Pruebas en <SelectDate /> Deberia mostrar <SelectDate/> correctamente 1`] = `
<div
  className="calendarButton"
>
  <button
    className="date"
    onClick={[Function]}
  >
    Check in - Check out
  </button>
  <Calendar
    calendarState="hidden"
    handleSelected={[Function]}
    responsiveness="desktop"
  />
</div>
`;
